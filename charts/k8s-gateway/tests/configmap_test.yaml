---
suite: Configmap

tests:
  - it: Should render ConfigMap with debug and dnsChallenge
    set:
      debug.enabled: true
      domain: "example.com"
      dnsChallenge.domain: "acme.example.com"
      watchedResources:
        - Service
        - Ingress
      ttl: 300
    template: templates/configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: data.Corefile
          value: |-
            .:1053 {
                debug
                k8s_gateway example.com {
                  apex RELEASE-NAME-k8s-gateway.NAMESPACE
                  ttl 300
                  resources Service Ingress
                }
                log
                errors
                health {
                  lameduck 5s
                }
                ready
                prometheus 0.0.0.0:9153
                forward . /etc/resolv.conf
                loop
                reload
                loadbalance
              }
      - matchRegex:
          path: data.Corefile
          pattern: "k8s_gateway example\\.com"
      - matchRegex:
          path: data.Corefile
          pattern: "resources Service Ingress"
  - it: Should render ConfigMap with fallthrough if set
    set:
      domain: "example.com"
      watchedResources:
        - Service
      zoneFiles:
        - domains: example.com.
          zoneName: example.com.
          filename: example.com.db
          fallthrough:
            enabled: true
            zones:
              - test.example.com
    template: templates/configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: data.Corefile
          value: |-
            .:1053 {
                k8s_gateway example.com {
                  apex RELEASE-NAME-k8s-gateway.NAMESPACE
                  ttl 300
                  resources Service
                }
                log
                errors
                health {
                  lameduck 5s
                }
                ready
                prometheus 0.0.0.0:9153
                forward . /etc/resolv.conf
                loop
                reload
                loadbalance
                file /etc/coredns/example.com.db example.com. {
                  fallthrough test.example.com
                }
              }
      - matchRegex:
          path: data.Corefile
          pattern: "fallthrough test\\.example\\.com"
  - it: Should not render ConfigMap with fallthrough if disabled
    set:
      domain: "example.com"
      watchedResources:
        - Service
      zoneFiles:
        - domains: example.com.
          zoneName: example.com.
          filename: example.com.db
          fallthrough:
            enabled: false
            zones:
              - test.example.com
    template: templates/configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: data.Corefile
          value: |-
            .:1053 {
                k8s_gateway example.com {
                  apex RELEASE-NAME-k8s-gateway.NAMESPACE
                  ttl 300
                  resources Service
                }
                log
                errors
                health {
                  lameduck 5s
                }
                ready
                prometheus 0.0.0.0:9153
                forward . /etc/resolv.conf
                loop
                reload
                loadbalance
                file /etc/coredns/example.com.db example.com. {
                }
              }
      - notMatchRegex:
          path: data.Corefile
          pattern: "fallthrough test\\.example\\.com"
  - it: Should render ConfigMap with reload if set
    set:
      domain: "example.com"
      watchedResources:
        - Service
      zoneFiles:
        - domains: example.com.
          zoneName: example.com.
          filename: example.com.db
          reload: 1m
    template: templates/configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: data.Corefile
          value: |-
            .:1053 {
                k8s_gateway example.com {
                  apex RELEASE-NAME-k8s-gateway.NAMESPACE
                  ttl 300
                  resources Service
                }
                log
                errors
                health {
                  lameduck 5s
                }
                ready
                prometheus 0.0.0.0:9153
                forward . /etc/resolv.conf
                loop
                reload
                loadbalance
                file /etc/coredns/example.com.db example.com. {
                  reload 1m
                }
              }
      - matchRegex:
          path: data.Corefile
          pattern: "reload 1m"
